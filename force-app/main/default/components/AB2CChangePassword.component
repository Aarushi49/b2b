<apex:component rendered="{!IF(contains($CurrentPage.Name,'ChangePassword'), true, false)}">
    <script id="ChangePassword-View-Desktop" type="text/template">
        <div class="container-xl">
            <p class="text-center h2 pt-1"> Set New Password </p>
            <form class="login_item_container desktop_resetForm" id="resetForm">
                <p class="text-center">Please set a new password now to secure your account. </p>
                <div class="alert alert-danger message_container" style="display:none;">
                    <span class="error-msg"></span>
                </div>
                <div class="form-group">
                    <label for="NewPassword">New Password &#42;</label>
                    <div class="input-group">
                        <input type="password" required class="form-control changepwd_newpasswordinput" id="NewPassword" name="NewPassword"/>
                        <div class="input-group-append">
                            <div class="alx-append-btn">
                                <span class="alx-ic ic-lock"></span>
                            </div>
                        </div>
                        <small id="passwordHelpBlock" class="form-text alx-form-text text-muted">
                            &#42; Passwords must match and be at least 8 characters in length. Passwords must contain at least one alpha, one numeric, and one special character.
                        </small>
                    </div>
                </div>
                <div class="form-group">
                    <label for="ConfirmPassword">Confirm New Password &#42;</label>
                    <div class="input-group">
                        <input type="password" required class="form-control changepwd_confirmpasswordinput" id="ConfirmPassword" name="ConfirmPassword"/>
                        <div class="input-group-append">
                            <div class="alx-append-btn">
                                <span class="alx-ic ic-lock"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <p class="alx-form-text alx-no-wrap  ml-auto">&#42; = required</p>
                <p class="text-center mt-2">
                    <input type="button" class="btn btn-primary" id="submit" value="{{pageLabelMap 'Submit'}}"/>
                </p>
                
            </form>
        </div>
    </script>

    <script>
        CCRZ.remoteAction.resetPassword = CCRZ.pagevars.namespace + 'cc_ctrl_ChangePassword.resetPassword';

        jQuery(function ($) {
            renderCustomBreadcrumb([{ label: "Sign In", href: "" }, { label: "Change Password" }]);

            let newpwd = '';
            let confpwd = '';
            let passwordChangeSuccess = false;
            CCRZ.changePasswordView = CCRZ.util.createView({
                className: "cc_ctrl_ChangePassword",
                desktop: {
                    template: CCRZ.uiProperties.changePasswordView.desktop.tmpl,
                    target: CCRZ.uiProperties.changePasswordView.desktop.selector
                },
                phone: {
                    template: CCRZ.uiProperties.changePasswordView.phone.tmpl,
                    target: CCRZ.uiProperties.changePasswordView.phone.selector
                },
                events: {
                    "click #submit": "resetPassword",
                    "keyup #ConfirmPassword": "enterPress"
                },
                enterPress: function (e) {
                    const code = e.which; // recommended to use e.which, it's normalized across browsers
                    if (code == 13) e.preventDefault();
                    if (CCRZ.disableAdaptive) {
                        $(e.target).popover('hide');
                    }
                    if (code == 13) {
                        this.resetPassword(e);
                    }
                },
                showError: function (errorMsg) {
                    $(".error-msg").html(errorMsg);
                    $(".message_container").show();
                },
                preViewChanged: function (oldView, newView) {
                    $('.' + oldView + '_resetForm #NewPassword').each(function () {
                        newpwd = $(this).val();
                    });
                    $('.' + oldView + '_resetForm #ConfirmPassword').each(function () {
                        confpwd = $(this).val();
                    });
                },
                postRender: function () {
                    this.$el.find('#NewPassword').val(newpwd);
                    this.$el.find('#ConfirmPassword').val(confpwd);
                },
                resetPassword: function (event) {
                    const form = this.$el.find("#resetForm").serializeObject();
                    const view = this;
                    this.invoke(
                        "resetPassword",
                        { storefront: CCRZ.pagevars.storefrontName, portalUserId: CCRZ.pagevars.portalUserId },
                        form.NewPassword,
                        form.ConfirmPassword,
                        function (response) {
                            if (response.success) {
                                passwordChangeSuccess = true;
                                window.location.href = '/my-account?viewState=overview';
                            } else {
                                if (!passwordChangeSuccess) {
                                    $.each(response.messages, function () {
                                        var message = this.message;
                                        if (this.labelId) {
                                            message = CCRZ.pagevars.pageLabels[this.labelId];
                                        }
                                        view.showError(message);
                                    });
                                }
                            }
                        }
                    );
                }
            });
        });
    </script>
</apex:component>